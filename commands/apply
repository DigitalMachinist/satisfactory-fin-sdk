#!/bin/bash

###################################################################################################
# apply
#
# Apply an app to one or more drives, marking the drive as an instance of the app. Any time the
# `build` command is run for that app, all applied drived will be updated with the latest build
# files for the app.
#
# Once a drive is applied to an app, a symlink will be made from /app_drives/<app_name>/<drive_uuid>
# to the drive's real folder at /drives/<drive_uuid> so their folder contents will always match.
#
# Note: Drives applied to an app are also `tag`ged with the app name and can be looked up using
# the `findtag` command.
###################################################################################################

COMMAND_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source "$COMMAND_PATH/../config"

if [ -z "$2" ]; then
    important "Missing arguments!\nUsage: $0 <app_name> <drive_uuid> [<drive_uuid>]...";
    exit 1
fi

if [ ! -d "$APP_DRIVES_PATH" ]; then
    mkdir "$APP_DRIVES_PATH"
fi

NEW_APP=$1
if [ ! -d "$APP_DRIVES_PATH/$NEW_APP" ]; then
    mkdir "$APP_DRIVES_PATH/$NEW_APP"
fi

# While changing to the /drives folder, get the path to use for Windows symlinking.
cd "$DRIVES_PATH"

for DRIVE in "${@:2}"
do
    # If this drive was previously assigned to another app, unlink it from that.
    DRIVE_PATH="$DRIVES_PATH/$DRIVE"
    if [ -f "$DRIVE_PATH/.app" ]; then
        OLD_APP=$( cat "$DRIVE_PATH/.app" )
        rm "$APP_DRIVES_PATH/$OLD_APP/$DRIVE"
        "$COMMAND_PATH/untag" "$OLD_APP" $DRIVE >/dev/null 2>&1
    fi
    
    # Update the .app file to the new app name and tag the drive with the app name.
    echo "$NEW_APP" > "$DRIVE_PATH/.app"
    "$COMMAND_PATH/tag" "$NEW_APP" $DRIVE >/dev/null 2>&1

    # Symlink the drive into the /app_drives subfolder for the applied app. This makes it so that any
    # changes to the folder under /app_drives are automatically reflected in the one under /drives.
    # Note: For clarity, /drives is the *real* copy. Folders under /app_drives symlink to those.
    if [ "$SYMLINK_FOR_WINDOWS" -eq 1 ]; then
        # Use Windows symlinking if requested.
        WIN_DRIVES_PATH=$( cmdpwd )
        cmdrun mklink /D "$WIN_DRIVES_PATH\\..\\app_drives\\$NEW_APP\\$DRIVE" "$WIN_DRIVES_PATH\\$DRIVE" >/dev/null 2>&1
    else
        # Otherwise, use *nix symlinking instead.
        ln -sf "$DRIVE_PATH" "$APP_DRIVES_PATH/$NEW_APP/$DRIVE"
    fi
    
    printf "Drive ${RED}$DRIVE${NC} is now an instance of app ${GREEN}$NEW_APP${NC}.\n"
done

cd $PWD

important "\nDone!\n"
